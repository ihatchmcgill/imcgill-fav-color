name: CI / Iac

on:
  pull_request:
    branches: [dev, stg, prd]
    types: [opened, reopened, synchronize, edited]
    paths:
      - 'iac/**'
      - '.github/workflows/ci-iac.yml'
env:
  tf_version: "1.3.7" # must match value in iac/*/*/*.tf

jobs:
  env:
    name: Set Env Vars
    runs-on: ubuntu-latest
    steps:
      - name: Set up DEV Environment Variables
        if: github.base_ref == 'dev'
        run: |
          matrix='{
            "env":[
              {
                "tf_working_dir":"./iac/dev/app",
                "aws_account":"863362256468",
                "aws_gha_role":"imcgill-fav-color-dev-gha"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

      - name: Set up STG Environment Variables
        if: github.base_ref == 'stg'
        run: |
          matrix='{
            "env":[
              {
                "tf_working_dir":"./iac/stg/app",
                "aws_account":"863362256468",
                "aws_gha_role":"imcgill-fav-color-stg-gha"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

      - name: Set up PRD/CPY Environment Variables
        if: github.base_ref == 'prd'
        run: |
          matrix='{
            "env":[
              {
                "tf_working_dir":"./iac/prd/app",
                "aws_account":"863362256468",
                "aws_gha_role":"imcgill-fav-color-prd-gha"
              },
              {
                "tf_working_dir":"./iac/cpy/app",
                "aws_account":"863362256468",
                "aws_gha_role":"imcgill-fav-color-cpy-gha"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

    outputs:
      matrix: ${{ env.matrix }}

  format:
    name: Terraform Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Terraform Format
        working-directory: "./"
        run: terraform fmt -check -recursive

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: env
    strategy:
      matrix: ${{ fromJson(needs.env.outputs.matrix) }}
      fail-fast: false
    permissions:
      contents: read
      actions: read
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: "arn:aws:iam::${{ matrix.env.aws_account }}:role/${{ matrix.env.aws_gha_role }}"
          role-session-name: ${{ github.sha }}
          aws-region: us-west-2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Terraform Init
        working-directory: ${{ matrix.env.tf_working_dir }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ matrix.env.tf_working_dir }}
        run: terraform plan -var 'image_tag=ci_test' -input=false -out plan

      - name: Comment Terraform Plan
        uses: byu-oit/github-action-tf-plan-comment@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ matrix.env.tf_working_dir }}
          terraform-plan-file: plan

      - name: Analyze Terraform Plan
        uses: byu-oit/github-action-tf-plan-analyzer@v2
        with:
          working-directory: ${{ matrix.env.tf_working_dir }}
          terraform-plan-file: plan
          divvycloud-username: ${{ secrets.DIVVYCLOUD_USERNAME }}
          divvycloud-password: ${{ secrets.DIVVYCLOUD_PASSWORD }}
